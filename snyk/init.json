[
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/certmanager/templates/certificate.yaml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/certmanager/templates/certificate.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/certmanager/templates/clusterissuer-acme.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/certmanager/templates/clusterissuer-acme.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/certmanager/templates/clusterissuer-selfsigned.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/certmanager/templates/clusterissuer-selfsigned.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/certmanager/templates/issuer-acme.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/certmanager/templates/issuer-acme.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/certmanager/templates/issuer-selfsigned.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/certmanager/templates/issuer-selfsigned.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/certmanager/templates/secret-cloudflare.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/certmanager/templates/secret-cloudflare.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/nginx-http/nginx-http-cm.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/nginx-http/nginx-http-cm.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/nginx-http/nginx-http-deploy.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/nginx-http/nginx-http-deploy.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[nginx-http].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[nginx-http].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[nginx-http].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[nginx-http].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[nginx-http].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[nginx-http].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "input.spec.template.spec.containers[nginx-http].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[nginx-http].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "input.spec.template.spec.containers[nginx-http].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/nginx-http/nginx-http-svc.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/nginx-http/nginx-http-svc.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-15",
        "title": "Service does not restrict ingress sources",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Service",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-15",
        "isGeneratedByCustomRule": false,
        "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
        "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
        "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
        "remediation": {
          "kubernetes": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
          "terraform": "Set `load_balancer_source_ranges` attribute value to specific IP addresses"
        },
        "lineNumber": 7,
        "iacDescription": {
          "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
          "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
          "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses"
        },
        "publicId": "SNYK-CC-K8S-15",
        "msg": "input.spec.loadBalancerSourceRanges",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/",
          "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "loadBalancerSourceRanges"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/portainer/templates/portainer-ingress.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/portainer/templates/portainer-ingress.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/certificate.yaml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/certificate.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/deployment.yaml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[helloworld].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[helloworld]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[helloworld].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[helloworld]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[helloworld].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[helloworld]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "input.spec.template.spec.containers[helloworld].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[helloworld]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[helloworld].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[helloworld]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[helloworld].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[helloworld]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[helloworld].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[helloworld]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[helloworld].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[helloworld]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "input.spec.template.spec.containers[helloworld].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[helloworld]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/ingress.yaml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/ingress.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/namespace.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/namespace.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/persistentvolumeclaim.yaml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/persistentvolumeclaim.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/service.yaml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/service.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/cm-and-secrets/mysql-deploy.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/cm-and-secrets/mysql-deploy.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "input.spec.template.spec.containers[mysql].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[mysql]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[mysql].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[mysql]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[mysql].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[mysql]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[mysql].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[mysql]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "input.spec.template.spec.containers[mysql].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[mysql]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[mysql].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[mysql]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[mysql].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[mysql]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[mysql].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[mysql]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[mysql].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[mysql]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/cm-and-secrets/mysql-secret.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/cm-and-secrets/mysql-secret.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/cm-and-secrets/nginx-http-cm.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/cm-and-secrets/nginx-http-cm.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/cm-and-secrets/nginx-http-deploy.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/cm-and-secrets/nginx-http-deploy.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[nginx-http].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[nginx-http].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[nginx-http].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[nginx-http].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[nginx-http].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[nginx-http].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "input.spec.template.spec.containers[nginx-http].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[nginx-http].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "input.spec.template.spec.containers[nginx-http].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-http]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/cm-and-secrets/nginx-http-svc.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/cm-and-secrets/nginx-http-svc.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-15",
        "title": "Service does not restrict ingress sources",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Service",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-15",
        "isGeneratedByCustomRule": false,
        "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
        "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
        "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
        "remediation": {
          "kubernetes": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
          "terraform": "Set `load_balancer_source_ranges` attribute value to specific IP addresses"
        },
        "lineNumber": 7,
        "iacDescription": {
          "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
          "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
          "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses"
        },
        "publicId": "SNYK-CC-K8S-15",
        "msg": "input.spec.loadBalancerSourceRanges",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/",
          "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "loadBalancerSourceRanges"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/cm-and-secrets/nginx-https-cm.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/cm-and-secrets/nginx-https-cm.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/cm-and-secrets/nginx-https-deploy.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/cm-and-secrets/nginx-https-deploy.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "input.spec.template.spec.containers[nginx-https].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-https]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[nginx-https].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-https]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[nginx-https].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-https]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[nginx-https].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-https]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "input.spec.template.spec.containers[nginx-https].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-https]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[nginx-https].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-https]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[nginx-https].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-https]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[nginx-https].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx-https]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[nginx-https].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nginx-https]",
          "imagePullPolicy"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/cm-and-secrets/nginx-https-secret-blank.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/cm-and-secrets/nginx-https-secret-blank.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/cm-and-secrets/nginx-https-svc.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/cm-and-secrets/nginx-https-svc.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-15",
        "title": "Service does not restrict ingress sources",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Service",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-15",
        "isGeneratedByCustomRule": false,
        "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
        "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
        "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
        "remediation": {
          "kubernetes": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
          "terraform": "Set `load_balancer_source_ranges` attribute value to specific IP addresses"
        },
        "lineNumber": 7,
        "iacDescription": {
          "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
          "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
          "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses"
        },
        "publicId": "SNYK-CC-K8S-15",
        "msg": "input.spec.loadBalancerSourceRanges",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/",
          "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "loadBalancerSourceRanges"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/pv-and-pvc/civo-pvc.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/pv-and-pvc/civo-pvc.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/pv-and-pvc/civo-web.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/pv-and-pvc/civo-web.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[civo-web].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[civo-web]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "input.spec.template.spec.containers[civo-web].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[civo-web]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[civo-web].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[civo-web]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[civo-web].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[civo-web]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[civo-web].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[civo-web]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[civo-web].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[civo-web]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "input.spec.template.spec.containers[civo-web].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[civo-web]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[civo-web].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[civo-web]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[civo-web].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[civo-web]",
          "livenessProbe"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/pv-and-pvc/local-web.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/pv-and-pvc/local-web.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[local-web].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[local-web]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[local-web].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[local-web]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[local-web].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[local-web]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[local-web].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[local-web]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "input.spec.template.spec.containers[local-web].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[local-web]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[local-web].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[local-web]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[local-web].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[local-web]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[local-web].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[local-web]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "input.spec.template.spec.containers[local-web].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[local-web]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/pv-and-pvc/nfs-pv.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/pv-and-pvc/nfs-pv.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/pv-and-pvc/nfs-pvc.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/pv-and-pvc/nfs-pvc.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/templates/pv-and-pvc/nfs-web.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/templates/pv-and-pvc/nfs-web.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[nfs-web].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nfs-web]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[nfs-web].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nfs-web]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[nfs-web].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nfs-web]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[nfs-web].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nfs-web]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[nfs-web].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nfs-web]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[nfs-web].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nfs-web]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "input.spec.template.spec.containers[nfs-web].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nfs-web]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[nfs-web].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[nfs-web]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "input.spec.template.spec.containers[nfs-web].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nfs-web]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/traefik/templates/ingress.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/traefik/templates/ingress.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/kubernetes/traefik/templates/ingressroutetcp.yml",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/kubernetes/traefik/templates/ingressroutetcp.yml",
    "packageManager": "k8sconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/civo/credentials.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/civo/credentials.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/civo/firewall.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/civo/firewall.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/civo/kubernetes.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/civo/kubernetes.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/civo/network.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/civo/network.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/civo/provider.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/civo/provider.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/civo/query.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/civo/query.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/civo/server.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/civo/server.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/civo/ssh_key.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/civo/ssh_key.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/cloudflare/credentials.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/cloudflare/credentials.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/cloudflare/dns.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/cloudflare/dns.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/cloudflare/provider.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/cloudflare/provider.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/helm/certmanager.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/helm/certmanager.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/helm/traefik.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/helm/traefik.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/kubectl/manifest.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/kubectl/manifest.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/kubectl/provider.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/kubectl/provider.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/kubernetes/deployment.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/kubernetes/deployment.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.container.security_context.allow_privilege_escalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "resource.kubernetes_deployment[your-deployment].spec.template.spec.container[0].security_context.allow_privilege_escalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[your-deployment]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "security_context",
          "allow_privilege_escalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `liveness_probe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `liveness_probe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "resource.kubernetes_deployment[your-deployment].spec.template.spec.container[0].liveness_probe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[your-deployment]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "liveness_probe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 13,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "resource.kubernetes_deployment[your-deployment].spec.spec.template.container[0].security_context.capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[your-deployment]",
          "spec",
          "spec",
          "template",
          "container[0]",
          "security_context",
          "capabilities"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `image_pull_policy` attribute to `Always",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `image_pull_policy` attribute to `Always"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "resource.kubernetes_deployment[your-deployment].spec.template.spec.container[0].image_pull_policy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[your-deployment]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "image_pull_policy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `security_context.run_as_non_root` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `security_context.run_as_non_root` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "resource.kubernetes_deployment[your-deployment].spec.template.spec.container[0].security_context.capabilities",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[your-deployment]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "security_context",
          "capabilities"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "resource.kubernetes_deployment[your-deployment].spec.template.spec.container[0].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[your-deployment]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `spec.container.resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "resource.kubernetes_deployment[your-deployment].spec.template.spec.container[0].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[your-deployment]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/kubernetes/ingress.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/kubernetes/ingress.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/kubernetes/provider.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/kubernetes/provider.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/kubernetes/secret.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/kubernetes/secret.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/kubernetes/service.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/kubernetes/service.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/proxmox/full-clone.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/proxmox/full-clone.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/proxmox/provider.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/proxmox/provider.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/templates/cloud-deployment-example/civo.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/templates/cloud-deployment-example/civo.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/templates/cloud-deployment-example/cloudflare.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/templates/cloud-deployment-example/cloudflare.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/templates/cloud-deployment-example/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/templates/cloud-deployment-example/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/templates/kubernetes-automation-example/certmanager.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/templates/kubernetes-automation-example/certmanager.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/templates/kubernetes-automation-example/civo.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/templates/kubernetes-automation-example/civo.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/templates/kubernetes-automation-example/cloudflare.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/templates/kubernetes-automation-example/cloudflare.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/templates/kubernetes-automation-example/nginx1.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/templates/kubernetes-automation-example/nginx1.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.container.security_context.allow_privilege_escalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 49,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "resource.kubernetes_deployment[nginx1].spec.template.spec.container[0].security_context.allow_privilege_escalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[nginx1]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "security_context",
          "allow_privilege_escalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `liveness_probe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 49,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `liveness_probe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "resource.kubernetes_deployment[nginx1].spec.template.spec.container[0].liveness_probe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[nginx1]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "liveness_probe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 33,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "resource.kubernetes_deployment[nginx1].spec.spec.template.container[0].security_context.capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[nginx1]",
          "spec",
          "spec",
          "template",
          "container[0]",
          "security_context",
          "capabilities"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `security_context.run_as_non_root` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 49,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `security_context.run_as_non_root` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "resource.kubernetes_deployment[nginx1].spec.template.spec.container[0].security_context.capabilities",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[nginx1]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "security_context",
          "capabilities"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 49,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "resource.kubernetes_deployment[nginx1].spec.template.spec.container[0].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[nginx1]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `image_pull_policy` attribute to `Always",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 49,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `image_pull_policy` attribute to `Always"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "resource.kubernetes_deployment[nginx1].spec.template.spec.container[0].image_pull_policy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[nginx1]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "image_pull_policy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `spec.container.resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 49,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "resource.kubernetes_deployment[nginx1].spec.template.spec.container[0].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[nginx1]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/templates/kubernetes-automation-example/provider.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/templates/kubernetes-automation-example/provider.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/templates/kubernetes-automation-example/traefik.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/templates/kubernetes-automation-example/traefik.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "boilerplates/terraform/templates/simple-docker-example/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/boilerplates/terraform/templates/simple-docker-example/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "severity": "low",
        "isIgnored": false,
        "subType": "EKS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "isGeneratedByCustomRule": false,
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "impact": "Audit records may not be available during investigation",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api', 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "remediation": {
          "terraform": "Set `enabled_cluster_log_types` attribute to `['api', 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api', 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "publicId": "SNYK-CC-TF-131",
        "msg": "resource.aws_eks_cluster[this].enabled_cluster_log_types",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "path": [
          "resource",
          "aws_eks_cluster[this]",
          "enabled_cluster_log_types"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-107",
        "title": "EKS cluster has non-encrypted secrets at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EKS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-107",
        "isGeneratedByCustomRule": false,
        "issue": "EKS cluster secrets are not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`.",
        "remediation": {
          "cloudformation": "Set the `Properties.EncryptionConfig` object with the relevant `provider` & `resources`.",
          "terraform": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "EKS cluster secrets are not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "publicId": "SNYK-CC-TF-107",
        "msg": "resource.aws_eks_cluster[this].encryption_config",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
          "https://aws.amazon.com/blogs/containers/using-eks-encryption-provider-support-for-defense-in-depth/"
        ],
        "path": [
          "resource",
          "aws_eks_cluster[this]",
          "encryption_config"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/node_groups.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/node_groups.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/eks_managed_node_group/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/eks_managed_node_group/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "isGeneratedByCustomRule": false,
        "issue": "The inline security group rule allows open egress",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "resolve": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-73",
        "msg": "resource.aws_security_group[remote_access].egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "path": [
          "resource",
          "aws_security_group[remote_access]",
          "egress"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/eks_managed_node_group/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/eks_managed_node_group/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/eks_managed_node_group/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/eks_managed_node_group/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/fargate_profile/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/fargate_profile/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/fargate_profile/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/fargate_profile/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/fargate_profile/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/fargate_profile/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/karpenter/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/karpenter/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/karpenter/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/karpenter/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/karpenter/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/karpenter/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/outposts/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/outposts/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/outposts/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/outposts/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/outposts/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/outposts/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/outposts/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/outposts/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/outposts/prerequisites/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/outposts/prerequisites/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/outposts/prerequisites/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/outposts/prerequisites/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/outposts/prerequisites/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/outposts/prerequisites/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/outposts/prerequisites/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/outposts/prerequisites/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/self_managed_node_group/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/self_managed_node_group/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/self_managed_node_group/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/self_managed_node_group/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/self_managed_node_group/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/self_managed_node_group/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/user_data/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/user_data/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/user_data/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/user_data/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/examples/user_data/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/examples/user_data/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/_user_data/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/_user_data/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/_user_data/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/_user_data/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/_user_data/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/_user_data/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/_user_data/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/_user_data/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/aws-auth/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/aws-auth/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/aws-auth/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/aws-auth/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/aws-auth/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/aws-auth/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/eks-managed-node-group/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/eks-managed-node-group/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/eks-managed-node-group/migrations.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/eks-managed-node-group/migrations.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/eks-managed-node-group/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/eks-managed-node-group/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/eks-managed-node-group/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/eks-managed-node-group/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/eks-managed-node-group/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/eks-managed-node-group/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/fargate-profile/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/fargate-profile/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/fargate-profile/migrations.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/fargate-profile/migrations.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/fargate-profile/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/fargate-profile/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/fargate-profile/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/fargate-profile/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/fargate-profile/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/fargate-profile/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/karpenter/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/karpenter/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/karpenter/migrations.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/karpenter/migrations.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/karpenter/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/karpenter/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/karpenter/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/karpenter/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/karpenter/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/karpenter/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/self-managed-node-group/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/self-managed-node-group/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/self-managed-node-group/migrations.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/self-managed-node-group/migrations.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/self-managed-node-group/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/self-managed-node-group/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/self-managed-node-group/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/self-managed-node-group/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-eks/modules/self-managed-node-group/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-eks/modules/self-managed-node-group/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-423",
        "title": "Default VPC resource detected",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-423",
        "isGeneratedByCustomRule": false,
        "issue": "Default VPC resources is being maintained",
        "impact": "Default VPC is designed to help get started with AWS, however dedicated VPCs are recommended for any production deployments",
        "resolve": "Remove `aws_default_vpc` resource",
        "remediation": {
          "terraform": "Remove `aws_default_vpc` resource"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Default VPC resources is being maintained",
          "impact": "Default VPC is designed to help get started with AWS, however dedicated VPCs are recommended for any production deployments",
          "resolve": "Remove `aws_default_vpc` resource"
        },
        "publicId": "SNYK-CC-AWS-423",
        "msg": "resource.aws_default_vpc[this]",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html",
          "https://github.com/gruntwork-io/cloud-nuke"
        ],
        "path": [
          "resource",
          "aws_default_vpc[this]"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/vpc-flow-logs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/vpc-flow-logs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/complete/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/complete/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/complete/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/complete/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/complete/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/complete/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/ipam/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/ipam/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/ipam/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/ipam/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/ipam/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/ipam/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/ipv6-dualstack/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/ipv6-dualstack/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/ipv6-dualstack/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/ipv6-dualstack/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/ipv6-dualstack/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/ipv6-dualstack/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/ipv6-only/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/ipv6-only/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/ipv6-only/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/ipv6-only/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/ipv6-only/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/ipv6-only/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/issues/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/issues/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/issues/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/issues/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/issues/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/issues/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/manage-default-vpc/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/manage-default-vpc/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/manage-default-vpc/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/manage-default-vpc/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/manage-default-vpc/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/manage-default-vpc/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/network-acls/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/network-acls/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/network-acls/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/network-acls/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/network-acls/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/network-acls/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/outpost/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/outpost/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/outpost/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/outpost/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/outpost/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/outpost/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/secondary-cidr-blocks/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/secondary-cidr-blocks/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/secondary-cidr-blocks/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/secondary-cidr-blocks/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/secondary-cidr-blocks/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/secondary-cidr-blocks/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/separate-route-tables/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/separate-route-tables/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/separate-route-tables/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/separate-route-tables/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/separate-route-tables/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/separate-route-tables/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/simple/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/simple/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/simple/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/simple/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/simple/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/simple/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/vpc-flow-logs/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/vpc-flow-logs/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-134",
        "title": "CloudWatch Log group retention period not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "CloudWatch",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-134",
        "isGeneratedByCustomRule": false,
        "issue": "Amazon CloudWatch log group does not specify retention period",
        "impact": "Logs will be kept indefinitely and incur AWS costs",
        "resolve": "Set `retention_in_days` attribute to required value, e.g. set `365`",
        "remediation": {
          "cloudformation": "Set `Properties.RetentionInDays` attribute to required value, e.g. set `365`",
          "terraform": "Set `retention_in_days` attribute to required value, e.g. set `365`"
        },
        "lineNumber": 154,
        "iacDescription": {
          "issue": "Amazon CloudWatch log group does not specify retention period",
          "impact": "Logs will be kept indefinitely and incur AWS costs",
          "resolve": "Set `retention_in_days` attribute to required value, e.g. set `365`"
        },
        "publicId": "SNYK-CC-TF-134",
        "msg": "resource.aws_cloudwatch_log_group[flow_log].retention_in_days",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/WhatIsCloudWatchLogs.html"
        ],
        "path": [
          "resource",
          "aws_cloudwatch_log_group[flow_log]",
          "retention_in_days"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-415",
        "title": "CloudWatch log group not encrypted with managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "CloudWatch",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-415",
        "isGeneratedByCustomRule": false,
        "issue": "Log group is not encrypted with customer managed key",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `kms_key_id` attribute with customer managed key id",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute with customer managed key id",
          "terraform": "Set `kms_key_id` attribute with customer managed key id"
        },
        "lineNumber": 154,
        "iacDescription": {
          "issue": "Log group is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_key_id` attribute with customer managed key id"
        },
        "publicId": "SNYK-CC-AWS-415",
        "msg": "resource.aws_cloudwatch_log_group[flow_log].kms_key_id",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_cloudwatch_log_group[flow_log]",
          "kms_key_id"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/vpc-flow-logs/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/vpc-flow-logs/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/examples/vpc-flow-logs/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/examples/vpc-flow-logs/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/modules/vpc-endpoints/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/modules/vpc-endpoints/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/modules/vpc-endpoints/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/modules/vpc-endpoints/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/modules/vpc-endpoints/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/modules/vpc-endpoints/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-aws-vpc/modules/vpc-endpoints/versions.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-aws-vpc/modules/vpc-endpoints/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/00-preface/hello-world/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/00-preface/hello-world/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[example].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[example].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "metadata_options"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/01-why-terraform/web-server/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/01-why-terraform/web-server/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[app].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[app]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[app].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[app]",
          "metadata_options"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[app].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[app]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/one-server/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/one-server/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[example].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[example].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "metadata_options"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/one-webserver/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/one-webserver/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[example].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "publicId": "SNYK-CC-TF-1",
        "msg": "input.resource.aws_security_group[instance].ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "path": [
          "input",
          "resource",
          "aws_security_group[instance]",
          "ingress"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[example].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "metadata_options"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/one-webserver-with-vars/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/one-webserver-with-vars/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[example].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "publicId": "SNYK-CC-TF-1",
        "msg": "input.resource.aws_security_group[instance].ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "path": [
          "input",
          "resource",
          "aws_security_group[instance]",
          "ingress"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[example].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "metadata_options"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/one-webserver-with-vars/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/one-webserver-with-vars/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/one-webserver-with-vars/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/one-webserver-with-vars/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_launch_configuration[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_launch_configuration[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "publicId": "SNYK-CC-TF-1",
        "msg": "input.resource.aws_security_group[instance].ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "path": [
          "input",
          "resource",
          "aws_security_group[instance]",
          "ingress"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "isGeneratedByCustomRule": false,
        "issue": "The inline security group rule allows open egress",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "resolve": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-73",
        "msg": "resource.aws_security_group[alb].egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "path": [
          "resource",
          "aws_security_group[alb]",
          "egress"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "isGeneratedByCustomRule": false,
        "issue": "The application load balancer is not set to drop invalid headers.",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "publicId": "SNYK-CC-AWS-405",
        "msg": "resource.aws_lb[example]",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-47",
        "title": "Load balancer endpoint does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-47",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer endpoint does not enforce HTTPS",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`",
        "remediation": {
          "cloudformation": "Set the `Properties.Protocol` attribute to `HTTPS` or `TLS`",
          "terraform": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Load balancer endpoint does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "publicId": "SNYK-CC-TF-47",
        "msg": "resource.aws_lb_listener[http].protocol",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html"
        ],
        "path": [
          "resource",
          "aws_lb_listener[http]",
          "protocol"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer is internet facing",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `internal` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-48",
        "msg": "resource.aws_lb[example].internal",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]",
          "internal"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[alb].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[alb]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "publicId": "SNYK-CC-TF-1",
        "msg": "input.resource.aws_security_group[alb].ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "path": [
          "input",
          "resource",
          "aws_security_group[alb]",
          "ingress"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/02-intro-to-terraform-syntax/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/global/s3/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/global/s3/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "S3",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "isGeneratedByCustomRule": false,
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "impact": "Object could be deleted without stronger MFA authorization",
        "resolve": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file",
        "remediation": {
          "terraform": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file"
        },
        "lineNumber": 30,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file"
        },
        "publicId": "SNYK-CC-TF-127",
        "msg": "resource.aws_s3_bucket_versioning[enabled].versioning_configuration.mfa_delete",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "path": [
          "resource",
          "aws_s3_bucket_versioning[enabled]",
          "versioning_configuration",
          "mfa_delete"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-125",
        "title": "DynamoDB point-in-time recovery disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-125",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
        "impact": "No automated backups of DynamoDB data",
        "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled` attribute to `true`",
          "terraform": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "lineNumber": 55,
        "iacDescription": {
          "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
          "impact": "No automated backups of DynamoDB data",
          "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-125",
        "msg": "resource.aws_dynamodb_table[terraform_locks]",
        "references": [
          "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery_Howitworks.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[terraform_locks]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "S3",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "isGeneratedByCustomRule": false,
        "issue": "The s3 access logs will not be collected",
        "impact": "There will be no audit trail of access to s3 objects",
        "resolve": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource.",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource."
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource."
        },
        "publicId": "SNYK-CC-TF-45",
        "msg": "input.resource.aws_s3_bucket[terraform_state].logging",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[terraform_state]",
          "logging"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-417",
        "title": "DynamoDB not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-417",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB table is not encrypted with customer managed KMS key",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN",
        "remediation": {
          "cloudformation": "Set `Properties.SSESpecification.SSEType` attribute to `KMS`, and `Properties.SSESpecification.KMSMasterKeyId` attribute to customer managed key ARN",
          "terraform": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "lineNumber": 55,
        "iacDescription": {
          "issue": "DynamoDB table is not encrypted with customer managed KMS key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "publicId": "SNYK-CC-AWS-417",
        "msg": "resource.aws_dynamodb_table[terraform_locks].server_side_encryption.kms_key_arn",
        "references": [
          "https://docs.aws.amazon.com/kms/latest/developerguide/services-dynamodb.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[terraform_locks]",
          "server_side_encryption",
          "kms_key_arn"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/global/s3/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/global/s3/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/global/s3/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/global/s3/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 51,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_launch_configuration[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_launch_configuration[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": 54,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "publicId": "SNYK-CC-TF-1",
        "msg": "input.resource.aws_security_group[instance].ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "path": [
          "input",
          "resource",
          "aws_security_group[instance]",
          "ingress"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "isGeneratedByCustomRule": false,
        "issue": "The inline security group rule allows open egress",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "resolve": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 131,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-73",
        "msg": "resource.aws_security_group[alb].egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "path": [
          "resource",
          "aws_security_group[alb]",
          "egress"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "isGeneratedByCustomRule": false,
        "issue": "The application load balancer is not set to drop invalid headers.",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": 62,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "publicId": "SNYK-CC-AWS-405",
        "msg": "resource.aws_lb[example]",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-47",
        "title": "Load balancer endpoint does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-47",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer endpoint does not enforce HTTPS",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`",
        "remediation": {
          "cloudformation": "Set the `Properties.Protocol` attribute to `HTTPS` or `TLS`",
          "terraform": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "lineNumber": 72,
        "iacDescription": {
          "issue": "Load balancer endpoint does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "publicId": "SNYK-CC-TF-47",
        "msg": "resource.aws_lb_listener[http].protocol",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html"
        ],
        "path": [
          "resource",
          "aws_lb_listener[http]",
          "protocol"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer is internet facing",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `internal` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "lineNumber": 62,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-48",
        "msg": "resource.aws_lb[example].internal",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]",
          "internal"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 119,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[alb].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[alb]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": 123,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "publicId": "SNYK-CC-TF-1",
        "msg": "input.resource.aws_security_group[alb].ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "path": [
          "input",
          "resource",
          "aws_security_group[alb]",
          "ingress"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/03-terraform-state/file-layout-example/stage/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/03-terraform-state/workspaces-example/one-instance/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/03-terraform-state/workspaces-example/one-instance/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[example].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[example].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "metadata_options"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/modules/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/modules/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 45,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_launch_configuration[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_launch_configuration[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "isGeneratedByCustomRule": false,
        "issue": "The application load balancer is not set to drop invalid headers.",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": 59,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "publicId": "SNYK-CC-AWS-405",
        "msg": "resource.aws_lb[example]",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-47",
        "title": "Load balancer endpoint does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-47",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer endpoint does not enforce HTTPS",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`",
        "remediation": {
          "cloudformation": "Set the `Properties.Protocol` attribute to `HTTPS` or `TLS`",
          "terraform": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "lineNumber": 71,
        "iacDescription": {
          "issue": "Load balancer endpoint does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "publicId": "SNYK-CC-TF-47",
        "msg": "resource.aws_lb_listener[http].protocol",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html"
        ],
        "path": [
          "resource",
          "aws_lb_listener[http]",
          "protocol"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "isGeneratedByCustomRule": false,
        "issue": "The security group rule allows open egress",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 132,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-72",
        "msg": "resource.aws_security_group_rule[allow_all_outbound]",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "path": [
          "resource",
          "aws_security_group_rule[allow_all_outbound]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 129,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer is internet facing",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `internal` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "lineNumber": 59,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-48",
        "msg": "resource.aws_lb[example].internal",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]",
          "internal"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 118,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[alb].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[alb]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 56,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_server_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_server_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/modules/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/modules/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/modules/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/modules/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/prod/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_testing_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_testing_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/module-example/stage/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/prod/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 38,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_testing_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_testing_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/04-terraform-module/multi-repo-example/live/stage/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/existing-iam-user/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/existing-iam-user/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/for-expressions/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/for-expressions/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/one-iam-user/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/one-iam-user/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/one-iam-user/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/one-iam-user/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/string-directives/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/string-directives/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-for-each/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-for-each/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-for-each/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-for-each/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-for-each/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-for-each/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-increment-name/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-increment-name/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-increment-name/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-increment-name/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-count/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-count/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-count/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-count/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-count/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-count/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-for-each/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-for-each/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-for-each/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-for-each/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-for-each/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-module-for-each/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-unique-names/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-unique-names/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-116",
        "title": "IAM Policy attached to user",
        "severity": "low",
        "isIgnored": false,
        "subType": "IAM",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-116",
        "isGeneratedByCustomRule": false,
        "issue": "The IAM policy is directly attached to a user",
        "impact": "Increases the security management overhead",
        "resolve": "Attach policy to a group or role, instead of user. For example, use `aws_iam_group_policy_attachment` resource",
        "remediation": {
          "cloudformation": "Attach policy to a group or role, instead of user. Remove `Properties.Users` attribute",
          "terraform": "Attach policy to a group or role, instead of user. For example, use `aws_iam_group_policy_attachment` resource"
        },
        "lineNumber": 55,
        "iacDescription": {
          "issue": "The IAM policy is directly attached to a user",
          "impact": "Increases the security management overhead",
          "resolve": "Attach policy to a group or role, instead of user. For example, use `aws_iam_group_policy_attachment` resource"
        },
        "publicId": "SNYK-CC-TF-116",
        "msg": "resource.aws_iam_user_policy_attachment[neo_cloudwatch_full_access]",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#use-groups-for-permissions"
        ],
        "path": [
          "resource",
          "aws_iam_user_policy_attachment[neo_cloudwatch_full_access]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-116",
        "title": "IAM Policy attached to user",
        "severity": "low",
        "isIgnored": false,
        "subType": "IAM",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-116",
        "isGeneratedByCustomRule": false,
        "issue": "The IAM policy is directly attached to a user",
        "impact": "Increases the security management overhead",
        "resolve": "Attach policy to a group or role, instead of user. For example, use `aws_iam_group_policy_attachment` resource",
        "remediation": {
          "cloudformation": "Attach policy to a group or role, instead of user. Remove `Properties.Users` attribute",
          "terraform": "Attach policy to a group or role, instead of user. For example, use `aws_iam_group_policy_attachment` resource"
        },
        "lineNumber": 62,
        "iacDescription": {
          "issue": "The IAM policy is directly attached to a user",
          "impact": "Increases the security management overhead",
          "resolve": "Attach policy to a group or role, instead of user. For example, use `aws_iam_group_policy_attachment` resource"
        },
        "publicId": "SNYK-CC-TF-116",
        "msg": "resource.aws_iam_user_policy_attachment[neo_cloudwatch_read_only]",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#use-groups-for-permissions"
        ],
        "path": [
          "resource",
          "aws_iam_user_policy_attachment[neo_cloudwatch_read_only]"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-unique-names/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-unique-names/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-unique-names/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/global/three-iam-users-unique-names/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/prod/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/services/multiple-ec2-instances/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/services/multiple-ec2-instances/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[example_1].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[example_1]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 22,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[example_2].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[example_2]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[example_1].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[example_1]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[example_1].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[example_1]",
          "metadata_options"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 22,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[example_2].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[example_2]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 22,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[example_2].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[example_2]",
          "metadata_options"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 36,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_testing_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_testing_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/live/stage/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/landing-zone/iam-user/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/landing-zone/iam-user/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/landing-zone/iam-user/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/landing-zone/iam-user/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/landing-zone/iam-user/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/landing-zone/iam-user/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_launch_configuration[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_launch_configuration[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "isGeneratedByCustomRule": false,
        "issue": "The application load balancer is not set to drop invalid headers.",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "publicId": "SNYK-CC-AWS-405",
        "msg": "resource.aws_lb[example]",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-47",
        "title": "Load balancer endpoint does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-47",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer endpoint does not enforce HTTPS",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`",
        "remediation": {
          "cloudformation": "Set the `Properties.Protocol` attribute to `HTTPS` or `TLS`",
          "terraform": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Load balancer endpoint does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "publicId": "SNYK-CC-TF-47",
        "msg": "resource.aws_lb_listener[http].protocol",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html"
        ],
        "path": [
          "resource",
          "aws_lb_listener[http]",
          "protocol"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "isGeneratedByCustomRule": false,
        "issue": "The security group rule allows open egress",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-72",
        "msg": "resource.aws_security_group_rule[allow_all_outbound]",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "path": [
          "resource",
          "aws_security_group_rule[allow_all_outbound]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer is internet facing",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `internal` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-48",
        "msg": "resource.aws_lb[example].internal",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]",
          "internal"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[alb].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[alb]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_server_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_server_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/loops-and-if-statements/modules/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/global/moved-example/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/global/moved-example/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[cluster_instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[cluster_instance]",
          "description"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/global/moved-example/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/global/moved-example/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster-instance-refresh/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster-instance-refresh/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster-instance-refresh/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster-instance-refresh/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster-instance-refresh/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/prod/services/webserver-cluster-instance-refresh/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 40,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_testing_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_testing_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster-instance-refresh/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster-instance-refresh/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 40,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_testing_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_testing_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster-instance-refresh/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster-instance-refresh/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster-instance-refresh/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/live/stage/services/webserver-cluster-instance-refresh/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_launch_configuration[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_launch_configuration[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "isGeneratedByCustomRule": false,
        "issue": "The application load balancer is not set to drop invalid headers.",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "publicId": "SNYK-CC-AWS-405",
        "msg": "resource.aws_lb[example]",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-47",
        "title": "Load balancer endpoint does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-47",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer endpoint does not enforce HTTPS",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`",
        "remediation": {
          "cloudformation": "Set the `Properties.Protocol` attribute to `HTTPS` or `TLS`",
          "terraform": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Load balancer endpoint does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "publicId": "SNYK-CC-TF-47",
        "msg": "resource.aws_lb_listener[http].protocol",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html"
        ],
        "path": [
          "resource",
          "aws_lb_listener[http]",
          "protocol"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "isGeneratedByCustomRule": false,
        "issue": "The security group rule allows open egress",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-72",
        "msg": "resource.aws_security_group_rule[allow_all_outbound]",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "path": [
          "resource",
          "aws_security_group_rule[allow_all_outbound]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer is internet facing",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `internal` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-48",
        "msg": "resource.aws_lb[example].internal",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]",
          "internal"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[alb].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[alb]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_server_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_server_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster-instance-refresh/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster-instance-refresh/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_launch_configuration[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_launch_configuration[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "isGeneratedByCustomRule": false,
        "issue": "The application load balancer is not set to drop invalid headers.",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "publicId": "SNYK-CC-AWS-405",
        "msg": "resource.aws_lb[example]",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-47",
        "title": "Load balancer endpoint does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-47",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer endpoint does not enforce HTTPS",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`",
        "remediation": {
          "cloudformation": "Set the `Properties.Protocol` attribute to `HTTPS` or `TLS`",
          "terraform": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Load balancer endpoint does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "publicId": "SNYK-CC-TF-47",
        "msg": "resource.aws_lb_listener[http].protocol",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html"
        ],
        "path": [
          "resource",
          "aws_lb_listener[http]",
          "protocol"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "isGeneratedByCustomRule": false,
        "issue": "The security group rule allows open egress",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-72",
        "msg": "resource.aws_security_group_rule[allow_all_outbound]",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "path": [
          "resource",
          "aws_security_group_rule[allow_all_outbound]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer is internet facing",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `internal` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-48",
        "msg": "resource.aws_lb[example].internal",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]",
          "internal"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[alb].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[alb]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_server_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_server_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster-instance-refresh/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster-instance-refresh/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster-instance-refresh/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/05-tips-and-tricks/zero-downtime-deployment/modules/services/webserver-cluster-instance-refresh/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/ec2-iam-role/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/ec2-iam-role/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[example].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[example].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "metadata_options"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/ec2-iam-role/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/ec2-iam-role/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/ec2-iam-role/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/ec2-iam-role/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/github-actions-oidc/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/github-actions-oidc/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/github-actions-oidc/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/github-actions-oidc/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/github-actions-oidc/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/github-actions-oidc/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/kms-cmk/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/kms-cmk/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-14",
        "title": "KMS key does not have key rotation enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "KMS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-14",
        "isGeneratedByCustomRule": false,
        "issue": "That your encryption keys are not being rotated by AWS",
        "impact": "That data is being encrypted with a key which is valid for a longer period of time, resulting in a greater exposure window should that key be leaked",
        "resolve": "Set `enable_key_rotation` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.EnableKeyRotation` attribute to `true`",
          "terraform": "Set `enable_key_rotation` attribute to `true`"
        },
        "lineNumber": 17,
        "iacDescription": {
          "issue": "That your encryption keys are not being rotated by AWS",
          "impact": "That data is being encrypted with a key which is valid for a longer period of time, resulting in a greater exposure window should that key be leaked",
          "resolve": "Set `enable_key_rotation` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-14",
        "msg": "input.resource.aws_kms_key[cmk].enable_key_rotation",
        "references": [],
        "path": [
          "input",
          "resource",
          "aws_kms_key[cmk]",
          "enable_key_rotation"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/kms-cmk/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/kms-cmk/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/kms-cmk/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/kms-cmk/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-aws-secrets-mgr/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-aws-secrets-mgr/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-aws-secrets-mgr/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-aws-secrets-mgr/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-aws-secrets-mgr/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-aws-secrets-mgr/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-kms/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-kms/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-kms/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-kms/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-kms/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-kms/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-vars/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-vars/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 17,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 17,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 17,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-vars/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-vars/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-vars/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/06-managing-secrets-with-terraform/mysql-vars/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/kubernetes-eks/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/kubernetes-eks/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/kubernetes-eks/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/kubernetes-eks/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/kubernetes-eks/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/kubernetes-eks/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/kubernetes-local/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/kubernetes-local/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/kubernetes-local/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/kubernetes-local/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-module/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-module/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-module/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-module/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-module/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-module/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-root/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-root/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-root/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-root/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-root/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-account-root/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-region/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-region/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 30,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[region_1].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[region_1]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[region_2].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[region_2]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 30,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[region_1].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[region_1]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 30,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[region_1].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[region_1]",
          "metadata_options"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[region_2].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[region_2]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[region_2].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[region_2]",
          "metadata_options"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-region/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/multi-region/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/single-account/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/examples/single-account/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/prod/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/prod/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/prod/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/prod/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/prod/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/prod/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/stage/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/stage/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/stage/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/stage/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/stage/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/live/stage/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/multi-account/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/multi-account/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/multi-account/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/multi-account/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/eks-cluster/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/eks-cluster/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-94",
        "title": "EKS cluster allows public access",
        "severity": "high",
        "isIgnored": false,
        "subType": "EKS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-94",
        "isGeneratedByCustomRule": false,
        "issue": "API endpoint of the EKS cluster is public",
        "impact": "Anyone may be able to establish network connectivity to the API server",
        "resolve": "Set `vpc_config.public_access_cidrs` attribute to specific net address e.g. `192.168.0.0/24`, or set `vpc_config.endpoint_public_access` attribute to `false`",
        "remediation": {
          "terraform": "Set `vpc_config.public_access_cidrs` attribute to specific net address e.g. `192.168.0.0/24`, or set `vpc_config.endpoint_public_access` attribute to `false`"
        },
        "lineNumber": 13,
        "iacDescription": {
          "issue": "API endpoint of the EKS cluster is public",
          "impact": "Anyone may be able to establish network connectivity to the API server",
          "resolve": "Set `vpc_config.public_access_cidrs` attribute to specific net address e.g. `192.168.0.0/24`, or set `vpc_config.endpoint_public_access` attribute to `false`"
        },
        "publicId": "SNYK-CC-TF-94",
        "msg": "resource.aws_eks_cluster[cluster].vpc_config[0]",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html"
        ],
        "path": [
          "resource",
          "aws_eks_cluster[cluster]",
          "vpc_config[0]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "severity": "low",
        "isIgnored": false,
        "subType": "EKS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "isGeneratedByCustomRule": false,
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "impact": "Audit records may not be available during investigation",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api', 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "remediation": {
          "terraform": "Set `enabled_cluster_log_types` attribute to `['api', 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": 13,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api', 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "publicId": "SNYK-CC-TF-131",
        "msg": "resource.aws_eks_cluster[cluster].enabled_cluster_log_types",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "path": [
          "resource",
          "aws_eks_cluster[cluster]",
          "enabled_cluster_log_types"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-107",
        "title": "EKS cluster has non-encrypted secrets at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EKS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-107",
        "isGeneratedByCustomRule": false,
        "issue": "EKS cluster secrets are not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`.",
        "remediation": {
          "cloudformation": "Set the `Properties.EncryptionConfig` object with the relevant `provider` & `resources`.",
          "terraform": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "lineNumber": 13,
        "iacDescription": {
          "issue": "EKS cluster secrets are not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "publicId": "SNYK-CC-TF-107",
        "msg": "resource.aws_eks_cluster[cluster].encryption_config",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
          "https://aws.amazon.com/blogs/containers/using-eks-encryption-provider-support-for-defense-in-depth/"
        ],
        "path": [
          "resource",
          "aws_eks_cluster[cluster]",
          "encryption_config"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/eks-cluster/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/eks-cluster/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/eks-cluster/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/eks-cluster/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/k8s-app/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/k8s-app/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `liveness_probe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 32,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `liveness_probe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "resource.kubernetes_deployment[app].spec.template.spec.container[0].liveness_probe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[app]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "liveness_probe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 24,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "resource.kubernetes_deployment[app].spec.spec.template.container[0].security_context.capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[app]",
          "spec",
          "spec",
          "template",
          "container[0]",
          "security_context",
          "capabilities"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-15",
        "title": "Service does not restrict ingress sources",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Service",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-15",
        "isGeneratedByCustomRule": false,
        "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
        "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
        "resolve": "Set `load_balancer_source_ranges` attribute value to specific IP addresses",
        "remediation": {
          "kubernetes": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
          "terraform": "Set `load_balancer_source_ranges` attribute value to specific IP addresses"
        },
        "lineNumber": 65,
        "iacDescription": {
          "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
          "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
          "resolve": "Set `load_balancer_source_ranges` attribute value to specific IP addresses"
        },
        "publicId": "SNYK-CC-K8S-15",
        "msg": "resource.kubernetes_service[app].spec.load_balancer_source_ranges",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/",
          "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
        ],
        "path": [
          "resource",
          "kubernetes_service[app]",
          "spec",
          "load_balancer_source_ranges"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `security_context.run_as_non_root` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 32,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `security_context.run_as_non_root` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "resource.kubernetes_deployment[app].spec.template.spec.container[0].security_context.capabilities",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[app]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "security_context",
          "capabilities"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 32,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "resource.kubernetes_deployment[app].spec.template.spec.container[0].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[app]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `spec.container.resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 32,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "resource.kubernetes_deployment[app].spec.template.spec.container[0].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[app]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.container.security_context.allow_privilege_escalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 32,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "resource.kubernetes_deployment[app].spec.template.spec.container[0].security_context.allow_privilege_escalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[app]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "security_context",
          "allow_privilege_escalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `image_pull_policy` attribute to `Always",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 32,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `image_pull_policy` attribute to `Always"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "resource.kubernetes_deployment[app].spec.template.spec.container[0].image_pull_policy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "resource",
          "kubernetes_deployment[app]",
          "spec",
          "template",
          "spec",
          "container[0]",
          "image_pull_policy"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/k8s-app/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/k8s-app/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/k8s-app/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/07-working-with-multiple-providers/modules/services/k8s-app/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/more-than-terraform/external-data-source/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/more-than-terraform/external-data-source/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/more-than-terraform/local-exec-provisioner/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/more-than-terraform/local-exec-provisioner/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[example].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[example].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "metadata_options"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/more-than-terraform/null-resource/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/more-than-terraform/null-resource/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/more-than-terraform/remote-exec-provisioner/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/more-than-terraform/remote-exec-provisioner/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 60,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 41,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[example].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": 61,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "publicId": "SNYK-CC-TF-1",
        "msg": "input.resource.aws_security_group[instance].ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "path": [
          "input",
          "resource",
          "aws_security_group[instance]",
          "ingress"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 41,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 41,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[example].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "metadata_options"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/alb/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/alb/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/alb/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/alb/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/alb/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/alb/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/asg/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/asg/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/asg/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/asg/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/asg/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/asg/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/examples/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/services/hello-world-app/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/services/hello-world-app/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/services/hello-world-app/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/services/hello-world-app/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/services/hello-world-app/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/prod/services/hello-world-app/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/services/hello-world-app/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/services/hello-world-app/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/services/hello-world-app/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/services/hello-world-app/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/services/hello-world-app/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/live/stage/services/hello-world-app/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/cluster/asg-rolling-deploy/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/cluster/asg-rolling-deploy/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_launch_configuration[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_launch_configuration[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_server_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_server_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/cluster/asg-rolling-deploy/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/cluster/asg-rolling-deploy/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/cluster/asg-rolling-deploy/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/cluster/asg-rolling-deploy/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/networking/alb/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/networking/alb/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "isGeneratedByCustomRule": false,
        "issue": "The application load balancer is not set to drop invalid headers.",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "publicId": "SNYK-CC-AWS-405",
        "msg": "resource.aws_lb[example]",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-47",
        "title": "Load balancer endpoint does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-47",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer endpoint does not enforce HTTPS",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`",
        "remediation": {
          "cloudformation": "Set the `Properties.Protocol` attribute to `HTTPS` or `TLS`",
          "terraform": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "lineNumber": 24,
        "iacDescription": {
          "issue": "Load balancer endpoint does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "publicId": "SNYK-CC-TF-47",
        "msg": "resource.aws_lb_listener[http].protocol",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html"
        ],
        "path": [
          "resource",
          "aws_lb_listener[http]",
          "protocol"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "isGeneratedByCustomRule": false,
        "issue": "The security group rule allows open egress",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 52,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-72",
        "msg": "resource.aws_security_group_rule[allow_all_outbound]",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "path": [
          "resource",
          "aws_security_group_rule[allow_all_outbound]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 49,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer is internet facing",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `internal` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-48",
        "msg": "resource.aws_lb[example].internal",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]",
          "internal"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 38,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[alb].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[alb]",
          "description"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/networking/alb/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/networking/alb/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/networking/alb/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/networking/alb/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/services/hello-world-app/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/services/hello-world-app/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/services/hello-world-app/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/services/hello-world-app/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/services/hello-world-app/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/08-production-grade-infrastructure/small-modules/modules/services/hello-world-app/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/alb/dependencies.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/alb/dependencies.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/alb/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/alb/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/alb/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/alb/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/alb/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/alb/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/asg/dependencies.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/asg/dependencies.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/asg/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/asg/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/asg/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/asg/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/asg/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/asg/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/standalone/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/standalone/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/standalone/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/standalone/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/standalone/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/standalone/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/with-mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/with-mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/with-mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/with-mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/with-mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/hello-world-app/with-mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/opa/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/opa/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[example].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[example].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[example]",
          "metadata_options"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/opa/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/examples/opa/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/services/hello-world-app/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/services/hello-world-app/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/services/hello-world-app/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/services/hello-world-app/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/services/hello-world-app/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/prod/services/hello-world-app/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/services/hello-world-app/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/services/hello-world-app/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/services/hello-world-app/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/services/hello-world-app/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/services/hello-world-app/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/live/stage/services/hello-world-app/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/cluster/asg-rolling-deploy/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/cluster/asg-rolling-deploy/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_launch_configuration[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_launch_configuration[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_server_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_server_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/cluster/asg-rolling-deploy/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/cluster/asg-rolling-deploy/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/cluster/asg-rolling-deploy/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/cluster/asg-rolling-deploy/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/networking/alb/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/networking/alb/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "isGeneratedByCustomRule": false,
        "issue": "The application load balancer is not set to drop invalid headers.",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "publicId": "SNYK-CC-AWS-405",
        "msg": "resource.aws_lb[example]",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-47",
        "title": "Load balancer endpoint does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-47",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer endpoint does not enforce HTTPS",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`",
        "remediation": {
          "cloudformation": "Set the `Properties.Protocol` attribute to `HTTPS` or `TLS`",
          "terraform": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "lineNumber": 22,
        "iacDescription": {
          "issue": "Load balancer endpoint does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "publicId": "SNYK-CC-TF-47",
        "msg": "resource.aws_lb_listener[http].protocol",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html"
        ],
        "path": [
          "resource",
          "aws_lb_listener[http]",
          "protocol"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "isGeneratedByCustomRule": false,
        "issue": "The security group rule allows open egress",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 50,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-72",
        "msg": "resource.aws_security_group_rule[allow_all_outbound]",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "path": [
          "resource",
          "aws_security_group_rule[allow_all_outbound]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 47,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer is internet facing",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `internal` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-48",
        "msg": "resource.aws_lb[example].internal",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]",
          "internal"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 36,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[alb].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[alb]",
          "description"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/networking/alb/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/networking/alb/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/networking/alb/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/networking/alb/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/services/hello-world-app/dependencies.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/services/hello-world-app/dependencies.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/services/hello-world-app/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/services/hello-world-app/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/services/hello-world-app/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/services/hello-world-app/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/services/hello-world-app/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/09-testing-terraform-code/modules/services/hello-world-app/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/examples/alb/dependencies.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/examples/alb/dependencies.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/examples/alb/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/examples/alb/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/examples/alb/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/examples/alb/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/examples/alb/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/examples/alb/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/examples/asg/dependencies.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/examples/asg/dependencies.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/examples/asg/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/examples/asg/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/examples/asg/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/examples/asg/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/examples/asg/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/examples/asg/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/live/stage/services/conflict-anna/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/live/stage/services/conflict-anna/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[foo].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[foo]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[foo].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[foo]",
          "metadata_options"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[foo].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[foo]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/live/stage/services/conflict-bill/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/live/stage/services/conflict-bill/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[foo].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[foo]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[foo].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[foo]",
          "metadata_options"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[foo].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[foo]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/live/stage/services/conflict-original/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/live/stage/services/conflict-original/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "isGeneratedByCustomRule": false,
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "publicId": "SNYK-CC-AWS-426",
        "msg": "resource.aws_instance[foo].disable_api_termination",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "path": [
          "resource",
          "aws_instance[foo]",
          "disable_api_termination"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "severity": "low",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "isGeneratedByCustomRule": false,
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "remediation": {
          "terraform": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "publicId": "SNYK-CC-TF-130",
        "msg": "resource.aws_instance[foo].metadata_options",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "path": [
          "resource",
          "aws_instance[foo]",
          "metadata_options"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_instance[foo].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_instance[foo]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/cluster/asg-rolling-deploy/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/cluster/asg-rolling-deploy/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[instance].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[instance]",
          "description"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "severity": "medium",
        "isIgnored": false,
        "subType": "EC2",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "isGeneratedByCustomRule": false,
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-53",
        "msg": "resource.aws_launch_configuration[example].root_block_device.encrypted",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "path": [
          "resource",
          "aws_launch_configuration[example]",
          "root_block_device",
          "encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_server_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_server_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/cluster/asg-rolling-deploy/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/cluster/asg-rolling-deploy/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/cluster/asg-rolling-deploy/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/cluster/asg-rolling-deploy/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/data-stores/mysql/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/data-stores/mysql/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "isGeneratedByCustomRule": false,
        "issue": "The DB instance storage is not encrypted by default",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `storage_encrypted` attribute to true",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 18,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "publicId": "SNYK-CC-TF-201",
        "msg": "resource.aws_db_instance[example].storage_encrypted",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "storage_encrypted"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "isGeneratedByCustomRule": false,
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 18,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "publicId": "SNYK-CC-AWS-414",
        "msg": "resource.aws_db_instance[example].iam_database_authentication_enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "iam_database_authentication_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-408",
        "title": "RDS automatic backup is disabled",
        "severity": "medium",
        "isIgnored": false,
        "type": "terraform",
        "subType": "RDS",
        "policyEngineType": "opa",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-408",
        "isGeneratedByCustomRule": false,
        "issue": "Automatic backup of AWS Relational Database is disabled",
        "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
        "resolve": "Set `resource.backup_retention_period` to `1` or more",
        "remediation": {
          "cloudformation": "Set `Properties.BackupRetentionPeriod` to `1` or more",
          "terraform": "Set `resource.backup_retention_period` to `1` or more"
        },
        "lineNumber": 18,
        "iacDescription": {
          "issue": "Automatic backup of AWS Relational Database is disabled",
          "impact": "No automatic backups will occur, availability risk if disaster occurs and manual backups have not been set",
          "resolve": "Set `resource.backup_retention_period` to `1` or more"
        },
        "publicId": "SNYK-CC-AWS-408",
        "msg": "resource.aws_db_instance[example].backup_retention_period",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html"
        ],
        "path": [
          "resource",
          "aws_db_instance[example]",
          "backup_retention_period"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/data-stores/mysql/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/data-stores/mysql/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/data-stores/mysql/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/data-stores/mysql/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/networking/alb/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/networking/alb/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "isGeneratedByCustomRule": false,
        "issue": "The application load balancer is not set to drop invalid headers.",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "publicId": "SNYK-CC-AWS-405",
        "msg": "resource.aws_lb[example]",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-47",
        "title": "Load balancer endpoint does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-47",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer endpoint does not enforce HTTPS",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`",
        "remediation": {
          "cloudformation": "Set the `Properties.Protocol` attribute to `HTTPS` or `TLS`",
          "terraform": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "lineNumber": 22,
        "iacDescription": {
          "issue": "Load balancer endpoint does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "publicId": "SNYK-CC-TF-47",
        "msg": "resource.aws_lb_listener[http].protocol",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html"
        ],
        "path": [
          "resource",
          "aws_lb_listener[http]",
          "protocol"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "isGeneratedByCustomRule": false,
        "issue": "The security group rule allows open egress",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 50,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-72",
        "msg": "resource.aws_security_group_rule[allow_all_outbound]",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "path": [
          "resource",
          "aws_security_group_rule[allow_all_outbound]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "isGeneratedByCustomRule": false,
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "impact": "That potentially everyone can access your resource",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 47,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "publicId": "SNYK-CC-TF-37",
        "msg": "resource.aws_security_group_rule[allow_http_inbound].cidr_blocks",
        "references": [],
        "path": [
          "resource",
          "aws_security_group_rule[allow_http_inbound]",
          "cidr_blocks"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "severity": "low",
        "isIgnored": false,
        "subType": "Elastic Load Balancing",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "isGeneratedByCustomRule": false,
        "issue": "Load balancer is internet facing",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `internal` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-48",
        "msg": "resource.aws_lb[example].internal",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "path": [
          "resource",
          "aws_lb[example]",
          "internal"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-56",
        "title": "Security group description is missing",
        "severity": "low",
        "isIgnored": false,
        "subType": "VPC",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "isGeneratedByCustomRule": false,
        "issue": "The description field is missing in the security group",
        "impact": "Increases the security management overhead",
        "resolve": "Set `description` attribute to meaningful statement",
        "remediation": {
          "terraform": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 36,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "publicId": "SNYK-CC-TF-56",
        "msg": "resource.aws_security_group[alb].description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "path": [
          "resource",
          "aws_security_group[alb]",
          "description"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/networking/alb/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/networking/alb/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/networking/alb/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/networking/alb/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/services/hello-world-app/dependencies.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/services/hello-world-app/dependencies.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/services/hello-world-app/main.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/services/hello-world-app/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/services/hello-world-app/outputs.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/services/hello-world-app/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "gader-abdollah",
      "orgPublicId": "b8392d0d-bcf3-428b-80bf-e434a6d6ee2e",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform-up-and-running-code/code/terraform/10-terraform-team/modules/services/hello-world-app/variables.tf",
    "projectName": "repos",
    "org": "gader-abdollah",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/abdollah/Downloads/iac-fpd-llm/repos/terraform-up-and-running-code/code/terraform/10-terraform-team/modules/services/hello-world-app/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/abdollah/Downloads/iac-fpd-llm/repos",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  }
]
